name:   Release Suite

on:
    push:
        tags:
            - v*

jobs:
    extract-version:
        runs-on: ubuntu-latest
        steps:
            - name: Extract version
              run: echo "::set-output name=VERSION::$(echo ${GITHUB_REF#refs/tags/})"
              id: extract_version
        outputs:
            VERSION: ${{ steps.extract_version.outputs.VERSION }}

    draft-release:
        name:   Draft Release
        needs:  extract-version
        runs-on: ubuntu-latest
        env:
            VERSION:  ${{ needs.extract-version.outputs.VERSION }}
        steps:
            # This is necessary for generating the changelog. It has to come before "Download Artifacts" or else it deletes the artifacts.
            - name: Checkout sources
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            # ==============================
            #       Download artifacts
            # ==============================

            - name: Download artifacts
              uses: actions/download-artifact@v2

            # ==============================
            #       Create release draft
            # ==============================

            - name: Generate Full Changelog
              id: changelog
              run: echo "::set-output name=CHANGELOG::$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 ${{ env.VERSION }}^)..${{ env.VERSION }})"

            - name: Create Release Draft
              env:
                  GITHUB_USER: davidkassa
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

              # The formatting here is borrowed from OpenEthereum: https://github.com/openethereum/openethereum/blob/main/.github/workflows/build.yml
              run: |
                  body=$(cat <<- "ENDBODY"
                  <Rick and Morty character>

                  ## Testing Checklist (DELETE ME)

                  - [ ] Run on synced Pyrmont Sigma Prime nodes.
                  - [ ] Run on synced Prater Sigma Prime nodes.
                  - [ ] Run on synced Canary (mainnet) Sigma Prime nodes.
                  - [ ] Resync a Pyrmont node.
                  - [ ] Resync a Prater node.
                  - [ ] Resync a mainnet node.

                  ## Release Checklist (DELETE ME)

                  - [ ] Merge `unstable` -> `stable`.
                  - [ ] Ensure docker images are published (check `latest` and the version tag).
                  - [ ] Prepare Discord post.
                  - [ ] Prepare Twitter post.
                  - [ ] Prepare mailing list email.

                  ## Summary

                  Add a summary.

                  ## All Changes

                  ${{ steps.changelog.outputs.CHANGELOG }}

                  ## Binaries

                  [See pre-built binaries documentation.](https://lighthouse-book.sigmaprime.io/installation-binaries.html)

                  The binaries are signed with Sigma Prime's PGP key: `15E66D941F697E28F49381F426416DC3F30674B0`

                  <style> .icon {width: 32px;} @media (prefers-color-scheme: dark) { .icon {filter: invert(1);} } [data-color-mode="light"][data-light-theme*="dark"] .icon, [data-color-mode="dark"][data-dark-theme*="dark"] .icon { filter: invert(1); } </style>
                  | System | Architecture | Binary | PGP Signature |
                  |:---:|:---:|:---:|:---|
                  | <img src="https://simpleicons.org/icons/apple.svg" class="icon"/> | x86_64 | [lighthouse-${{ env.VERSION }}-x86_64-apple-darwin.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-apple-darwin.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-apple-darwin.tar.gz.asc) |
                  | <img src="https://simpleicons.org/icons/apple.svg" class="icon"/> | x86_64 | [lighthouse-${{ env.VERSION }}-x86_64-apple-darwin-portable.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-apple-darwin-portable.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-apple-darwin-portable.tar.gz.asc) |
                  | <img src="https://simpleicons.org/icons/linux.svg" class="icon"/> | x86_64 | [lighthouse-${{ env.VERSION }}-x86_64-unknown-linux-gnu.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-unknown-linux-gnu.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-unknown-linux-gnu.tar.gz.asc) |
                  | <img src="https://simpleicons.org/icons/linux.svg" class="icon"/> | x86_64 | [lighthouse-${{ env.VERSION }}-x86_64-unknown-linux-gnu-portable.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-unknown-linux-gnu-portable.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-unknown-linux-gnu-portable.tar.gz.asc) |
                  | <img src="https://simpleicons.org/icons/raspberrypi.svg" class="icon"/> | aarch64 | [lighthouse-${{ env.VERSION }}-aarch64-unknown-linux-gnu.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-aarch64-unknown-linux-gnu.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-aarch64-unknown-linux-gnu.tar.gz.asc) |
                  | <img src="https://simpleicons.org/icons/raspberrypi.svg" class="icon"/> | aarch64 | [lighthouse-${{ env.VERSION }}-aarch64-unknown-linux-gnu-portable.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-aarch64-unknown-linux-gnu-portable.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-aarch64-unknown-linux-gnu-portable.tar.gz.asc) |
                  | <img src="https://simpleicons.org/icons/windows.svg" class="icon"/> | x86_64 | [lighthouse-${{ env.VERSION }}-x86_64-windows.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-windows.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-windows.tar.gz.asc) |
                  | <img src="https://simpleicons.org/icons/windows.svg" class="icon"/> | x86_64 | [lighthouse-${{ env.VERSION }}-x86_64-windows-portable.tar.gz](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-windows-portable.tar.gz) | [PGP Signature](https://github.com/${{ env.REPO_NAME }}/releases/download/${{ env.VERSION }}/lighthouse-${{ env.VERSION }}-x86_64-windows-portable.tar.gz.asc) |
                  | | | | |
                  | **System** | **Option** | - | **Resource** |
                  | <img src="https://simpleicons.org/icons/docker.svg" class="icon"/> | Docker | [${{ env.VERSION }}](https://hub.docker.com/r/${{ env.IMAGE_NAME }}/tags?page=1&ordering=last_updated&name=${{ env.VERSION }}) | [${{ env.IMAGE_NAME }}](https://hub.docker.com/r/${{ env.IMAGE_NAME }}) |
                  ENDBODY
                  )
                  assets=()

                  tag_name="${{ env.VERSION }}"
                  echo "$body" | hub release create --draft "${assets[@]}" -F "-" "$tag_name"
